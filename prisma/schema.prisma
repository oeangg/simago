// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/genesrated/prisma"
}

datasource db {
  provider = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Employee {
  id String @id @default(cuid())
  nik String @unique
  name String
  isActive Boolean @default(false)
  gender Gender
  address String
  city String
  zipcode String
  photo String?
  telNumber String?
  phoneNumber String
  employment Employment[]  
}

model Employment {
  id String @id @default(cuid())
  startDate DateTime
  endDate DateTime? 
  positionId String
  position Position @relation(fields: [positionId], references: [id])
  employeeId String
  employees Employee @relation(fields: [employeeId], references: [id]) 
}

model Position {
  id String @id @default(cuid())
  name String
  employments Employment[]
}

model Session {
  id String @id @default(cuid())
  userId String @unique
  user User @relation(fields: [userId], references: [id])
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}
model User {
  id String @id @default(cuid())
  username String @unique
  fullname String
  email String @unique
  password String
  role Role @default(USER)
  profilPic String?
  isActive Boolean @default(false)
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  session Session?
}


//enum
enum Gender {
  MALE
  FEMALE
}

enum Role {
  USER 
  SUPERVISOR
  MANAGER
  ADMIN
  SUPER_ADMIN
}